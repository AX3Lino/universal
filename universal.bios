local function set(l)
  local s = {}
  for _, v in ipairs(l) do s[v] = true end
  return s
end

local nonConsumables = {
"Programmed Circuit",
"Programmed Bio Circuit",
"Programmed Breakthrough Circuit",
"Extruder Shape (Plate)",
"Extruder Shape (Rod)",
"Extruder Shape (Bolt)",
"Extruder Shape (Ring)",
"Extruder Shape (Cell)",
"Extruder Shape (Ingot)",
"Extruder Shape (Wire)",
"Extruder Shape (Casing)",
"Extruder Shape (Tiny Pipe)",
"Extruder Shape (Small Pipe)",
"Extruder Shape (Normal Pipe)",
"Extruder Shape (Large Pipe)",
"Extruder Shape (Huge Pipe)",
"Extruder Shape (Block)",
"Extruder Shape (Sword Blade)",
"Extruder Shape (Pickaxe Head)",
"Extruder Shape (Shovel Head)",
"Extruder Shape (Axe Head)",
"Extruder Shape (Hoe Head)",
"Extruder Shape (Hammer Head)",
"Extruder Shape (File Head)",
"Extruder Shape (Saw Blade)",
"Extruder Shape (Gear)",
"Extruder Shape (Bottle)",
"Extruder Shape (Rotor)",
"Extruder Shape (Small Gear)",
"Extruder Shape (Turbine Blade)",
"Extruder Shape (Drill Head)",
"Mold (Plate)",
"Mold (Casing)",
"Mold (Gear)",
"Mold (Coinage)",
"Mold (Bottle)",
"Mold (Ingot)",
"Mold (Ball)",
"Mold (Block)",
"Mold (Nuggets)",
"Mold (Buns)",
"Mold (Bread)",
"Mold (Baguette)",
"Mold (Cylinder)",
"Mold (Anvil)",
"Mold (Name)",
"Mold (Arrow Head)",
"Mold (Small Gear)",
"Mold (Rod)",
"Mold (Bolt)",
"Mold (Round)",
"Mold (Screw)",
"Mold (Ring)",
"Mold (Long Rod)",
"Mold (Rotor)",
"Mold (Turbine Blade)",
"Mold (Tiny Pipe)",
"Mold (Small Pipe)",
"Mold (Normal Pipe)",
"Mold (Large Pipe)",
"Mold (Huge Pipe)",
"Mold (Drill Head)",
"Mold (Pellet)",
"Bismutite Lens",
"Cubic Zirconia Lens",
"Fluor-Buergerite Lens",
"Chromo-Alumino-Povondraite Lens",
"Vanadio-Oxy-Dravite Lensa",
"Olenite Lens",
"Red Zircon Lens",
"Salt Lens",
"Spodumene Lens",
"Rock Salt Lens",
"Fayalite Lens",
"Forsterite Lens",
"Hedenbergite Lens",
"Prasiolite Lens",
"Magneto Resonatic Lens",
"BArTiMaEuSNeK Lens",
"Tiberium Lens",
"Fluorspar Lens",
"Orundum Lens",
"Cerium-doped Lutetium Aluminium Garnet (Ce:LuAG) Lens",
"Reinforced Glass Lens",
"Quite Certain Crystal Lens",
"Radox Polymer Lens",
"Chromatic Lens",
"Mana Diamond Lens",
"Dragonstone Lens",
"Firestone Lens",
"Diamond Lens",
"Emerald Lens",
"Ruby Lens",
"Sapphire Lens",
"Green Sapphire Lens",
"Olivine Lens",
"Nether Star Lens",
"Topaz Lens",
"Tanzanite Lens",
"Amethyst Lens",
"Opal Lens",
"Jasper Lens",
"Spinel Lens",
"Blue Topaz Lens",
"Amber Lens",
"Dilithium Lens",
"Forcicium Lens",
"Forcillium Lens",
"Force Lens",
"Red Garnet Lens",
"Yellow Garnet Lens",
"Enderpearl Lens",
"Endereye Lens",
"Aer Lens",
"Ignis Lens",
"Terra Lens",
"Aqua Lens",
"Perditio Lens",
"Ordo Lens",
"Glass Lens",
"Wood's Glass Lens",
"Calcium Dust",
"Quicklime Dust",
"Calcite Dust",
"Inscriber Engineering Press",
"Inscriber Logic Press",
"Inscriber Silicon Press",
"Inscriber Calculation Press"
"Copper Plate"
}

nonConsumables = set(nonConsumables)
local transposer = component.proxy(component.list("transposer")())

for side = 0, 5 do
  local name = transposer.getInventoryName(side)
  if name == "tile.interface" then
    transposer.inputBusSide = side
  elseif name == "gt.blockmachines" and transposer.getTankCount(side) > 0 then
    transposer.inputHatchSide = side
    transposer.tankCount = transposer.getTankCount(side)
  elseif name == "tile.appliedenergistics2.BlockInterface" then
    transposer.interfaceSide = side
  end
end

while true do
  local item = transposer.getStackInSlot(transposer.inputBusSide, 1)
  if item then
    if nonConsumables[item.label] then
      local allTanksEmpty = true
      if transposer.inputHatchSide then
        local tank = transposer.getFluidInTank(transposer.inputHatchSide)
        for tankIndex = 1, transposer.tankCount do
          if tank[tankIndex].amount > 0 then
            allTanksEmpty = false
            break
          end
        end
      end
      if allTanksEmpty then
        transposer.transferItem(transposer.inputBusSide, transposer.interfaceSide, 1, 1, 1)
      end
    end
  end
end